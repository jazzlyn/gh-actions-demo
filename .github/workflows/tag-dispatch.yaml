---
name: build and dispatch

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "v*.*.*-rc*"
      - "v*.*.*"

env:
  ENVIRONMENT: "integration"

jobs:
  environment:
    runs-on: ubuntu-latest
    steps:
      - name: set env to staging
        if: ${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc') && (startsWith(github.event.base_ref, 'refs/heads/release/')) }}
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV
      - name: set env to production
        if: ${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc') && startsWith(github.event.base_ref, 'refs/heads/release/') }}
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV

  docker-build-push:
    if: ${{ github.env.ENVIRONMENT == 'integration' || github.env.ENVIRONMENT == 'staging' }}
    uses: "strg-at/github-workflows/.github/workflows/docker-build-push-github.yaml@v0.4.0"
    with:
      runner: '["ubuntu-latest"]'
      #subpath: ${{ github.env.ENVIRONMENT }}/test-app

  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'

  dispatch:
    if: ${{ github.env.ENVIRONMENT == 'integration' || github.env.ENVIRONMENT == 'staging' }}
    needs: [docker-build-push]
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v0.4.0"
    with:
      runner: '["ubuntu-latest"]'
      sha: ${{ fromJSON(needs.docker-build-push.outputs.metadata).labels['org.opencontainers.image.version'] }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ github.env.ENVIRONMENT }}-test-app
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}

  tag-image-github:
    if: ${{ github.env.ENVIRONMENT == 'production' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: checkout repository
        uses: actions/checkout@v3.5.0

      # https://github.com/marketplace/actions/docker-login
      - name: log into registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/docker-registry-tag
      - name: tag image
        uses: shrink/actions-docker-registry-tag@v3.0.0
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ github.event.repository.name }}
          target: ${{ github.sha }}
          tags: ${{  github.ref_name }}

  production-dispatch:
    if: ${{ github.env.ENVIRONMENT == 'production' }}
    needs: [tag-image-github]
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v0.4.0"
    with:
      runner: '["ubuntu-latest"]'
      sha: ${{  github.ref_name }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ github.env.ENVIRONMENT }}-test-app
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}
