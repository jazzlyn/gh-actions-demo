---
name: multi-env-dispatch

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - release/**
      - hotfix/**
    tags:
      - "v*.*.*"

env:
  ENVIRONMENT: null

jobs:
  environment:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ env.ENVIRONMENT }}
    steps:
      - name: set env to integration
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        run: |
          echo "ENVIRONMENT=integration" >> $GITHUB_ENV

      - name: set env to staging
        if: ${{ startsWith(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix') }}
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV

      - name: set env to production
        if: ${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc') }}
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV

  check-image-exists:
    permissions:
      contents: read
      packages: read
    uses: "strg-at/github-workflows/.github/workflows/docker-image-exists-github.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      subpath: nginx

  docker-build-push:
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: [check-image-exists]
    if: ${{ needs.check-image-exists.outputs.tag == 'not found' }}
    uses: "strg-at/github-workflows/.github/workflows/docker-build-push-github.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      subpath: nginx
      tags: |
        type=ref,event=tag,priority=300
        type=ref,event=branch,suffix={{sha}}-priority=200
        ${{ github.sha }}, priority=100

  tag-image-github:
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: [check-image-exists]
    if: ${{ needs.check-image-exists.outputs.tag == 'found' }}
    name: "retag image"
    uses: "strg-at/github-workflows/.github/workflows/tag-image-github.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      repository: jazzlyn/gh-actions-demo
      source-path: nginx
      target-path: nginx

  integration-dispatch:
    needs: [environment, docker-build-push, tag-image-github]
    if: ${{ always() && needs.environment.outputs.target == 'integration' }}
    name: ${{ needs.environment.outputs.target }}
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      tag: ${{ fromJSON(needs.docker-build-push.outputs.metadata).labels['org.opencontainers.image.version'] }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ needs.environment.outputs.target }}-nginx
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}

  staging-dispatch:
    needs: [environment, docker-build-push, tag-image-github]
    if: ${{ always() && needs.environment.outputs.target == 'staging' }}
    name: ${{ needs.environment.outputs.target }}
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      tag: ${{ fromJSON(needs.docker-build-push.outputs.metadata).labels['org.opencontainers.image.version'] }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ needs.environment.outputs.target }}-nginx
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}


  production-dispatch:
    needs: [environment, docker-build-push, tag-image-github]
    if: ${{ always() && needs.environment.outputs.target == 'production' }}
    name: ${{ needs.environment.outputs.target }}
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v1.0.0"
    with:
      runner: '["ubuntu-latest"]'
      tag: ${{  github.ref_name }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ needs.environment.outputs.target }}-nginx
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}
