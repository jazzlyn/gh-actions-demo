---
name: multi-env-dispatch

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  #   tags:
  #     - "v*.*.*"
  #     - "*.*.*"
  #   paths-ignore:
  #     - .github/**

concurrency:
  group: ${{ github.repository }}-${{ github.sha }}

env:
  ENVIRONMENT: null

jobs:
  environment:
    runs-on: ubuntu-latest
    outputs:
      target: ${{ env.ENVIRONMENT }}
    steps:
      - name: set env to integration
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        run: |
          echo "ENVIRONMENT=integration" >> $GITHUB_ENV

      - name: set env to staging
        if: ${{ startsWith(github.ref, 'refs/tags/') && (contains(github.ref, '-rc') || contains(github.ref, 'v0.')) }}
        run: |
          echo "ENVIRONMENT=staging" >> $GITHUB_ENV

      - name: set env to production
        if: ${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-RC') && !contains(github.ref, 'v0.') }}
        run: |
          echo "ENVIRONMENT=production" >> $GITHUB_ENV

  check-image-exists:
    permissions:
      contents: read
      packages: read
    uses: "strg-at/github-workflows/.github/workflows/docker-image-exists-github.yaml@c1b31ff6c2d848b014596b6f919336d6ae89d8de" # v1.9.1
    with:
      runner: '["ubuntu-latest"]'
      subpath: nginx

  docker-build-push:
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: [check-image-exists]
    if: ${{ needs.check-image-exists.outputs.tag == 'not found' }}
    uses: "strg-at/github-workflows/.github/workflows/docker-build-push-github.yaml@c1b31ff6c2d848b014596b6f919336d6ae89d8de" # v1.9.1
    with:
      runner: '["ubuntu-latest"]'
      subpath: nginx
      tags: |
        type=ref, event=tag, priority=300
        type=sha,prefix={{date 'YYMMDD-HHmmss'}}-,priority=200
        ${{ github.sha }}, priority=100

  tag-image-github:
    permissions:
      contents: read
      id-token: write
      packages: write
    needs: [check-image-exists]
    if: ${{ needs.check-image-exists.outputs.tag == 'found' }}
    name: "retag image"
    uses: "strg-at/github-workflows/.github/workflows/tag-image-github.yaml@c1b31ff6c2d848b014596b6f919336d6ae89d8de" # v1.9.1
    with:
      runner: '["ubuntu-latest"]'
      repository: jazzlyn/gh-actions-demo
      source-path: nginx
      target-path: nginx

  integration-dispatch:
    needs: [environment, docker-build-push, tag-image-github]
    if: ${{ always() && (needs.docker-build-push.result == 'success' || needs.tag-image-github.result == 'success') && needs.environment.outputs.target == 'integration' }}
    name: ${{ needs.environment.outputs.target }}
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@c1b31ff6c2d848b014596b6f919336d6ae89d8de" # v1.9.1
    with:
      runner: '["ubuntu-latest"]'
      tag: ${{ github.sha }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ needs.environment.outputs.target }}-nginx
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}

  staging-dispatch:
    needs: [environment, docker-build-push, tag-image-github]
    if: ${{ always() && (needs.docker-build-push.result == 'success' || needs.tag-image-github.result == 'success') && needs.environment.outputs.target == 'staging' }}
    name: ${{ needs.environment.outputs.target }}
    uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@c1b31ff6c2d848b014596b6f919336d6ae89d8de" # v1.9.1
    with:
      runner: '["ubuntu-latest"]'
      tag: ${{  github.ref_name }}
      repository: jazzlyn/gh-actions-demo
      dispatch-event: ${{ needs.environment.outputs.target }}-nginx
    secrets:
      github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
      github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}

  # production-dispatch:
  #   needs: [environment, docker-build-push, tag-image-github]
  #   if: ${{ always() && (needs.docker-build-push.result == 'success' || needs.tag-image-github.result == 'success') && needs.environment.outputs.target == 'production' }}
  #   name: ${{ needs.environment.outputs.target }}
  #   uses: "strg-at/github-workflows/.github/workflows/repo-dispatch.yaml@v1.3.2"
  #   with:
  #     runner: '["ubuntu-latest"]'
  #     tag: ${{  github.ref_name }}
  #     repository: jazzlyn/gh-actions-demo
  #     dispatch-event: ${{ needs.environment.outputs.target }}-nginx
  #   secrets:
  #     github-app-id: ${{ secrets.JAZZLYN_BOT_GITHUB_APP_ID }}
  #     github-app-key: ${{ secrets.JAZZLYN_BOT_GITHUB_PEM }}
