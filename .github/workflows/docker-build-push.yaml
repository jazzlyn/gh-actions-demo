---
name: docker-build-push

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  docker-build-push-github:
    name: github
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    env:
      image-path: ghcr.io/${{ github.repository }}/test

    steps:
      # https://github.com/marketplace/actions/checkout
      - name: checkout repository
        uses: actions/checkout@v4.1.1

      # https://github.com/marketplace/actions/cosign-installer
      - name: setup cosign
        uses: sigstore/cosign-installer@v3.0.2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      # https://github.com/marketplace/actions/docker-setup-qemu
      - name: setup QEMU
        uses: docker/setup-qemu-action@v2.1.0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2.5.0

      # https://github.com/marketplace/actions/docker-login
      - name: log into registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/marketplace/actions/docker-metadata-action
      - name: extract metadata for docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.image-path }}
          tags: ${{ github.ref_name }}

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: build and push docker image
        id: build-and-push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # https://github.com/sigstore/cosign
      - name: sign the published docker image
        run: cosign sign --yes ${{ env.image-path }}@${{ steps.build-and-push.outputs.digest }}

      - name: extract build assets
        run: |
          docker pull ${{ env.image-path }}:${{ github.ref_name }}
          CONTAINER_ID=$(docker create ${{ env.image-path }}:${{ github.ref_name }})
          docker cp ${CONTAINER_ID}:/app .

      # https://github.com/marketplace/actions/upload-a-build-artifact
      - name: upload artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: test-build-assets-${{ github.ref_name }}
          path: ./app/**
