{
  extends: [
    "github>strg-at/renovate-config:base.json5",
    "github>strg-at/renovate-config//github-actions/silent-automerge.json5",
    "github>strg-at/renovate-config//pre-commit/silent-automerge.json5",
    "github>strg-at/renovate-config//terraform/silent-automerge.json5",
  ],
  // customManagers: [
  //   {
  //     customType: "regex",
  //     fileMatch: ["^oci/.*/kustomization\\.yaml$"],
  //     matchStrings: [
  //       "https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/(?<currentValue>\\d+.\\d+.\\d+)/.+",
  //     ],
  //     depNameTemplate: "keycloak/keycloak-k8s-resources",
  //     datasourceTemplate: "github-tags",
  //   },
  // ],
  // packageRules: [
  //   {
  //     matchPackageNames: ["keycloak/keycloak-k8s-resources"],
  //     matchDatasources: ["github-tags"],
  //     automerge: true,
  //     matchUpdateTypes: ["minor", "patch"],
  //     automergeType: "pr",
  //   },
  //   {
  //     matchDatasources: ["docker"],
  //     matchDepNames: ["ghcr.io/**"],
  //     matchUpdateTypes: ["pin", "pinDigest"],
  //     enabled: false,
  //   },
  //   {
  //     matchDatasources: ["docker"],
  //     matchDepNames: ["ghcr.io/**"],
  //     matchUpdateTypes: ["major", "minor", "patch"],
  //     automerge: false,
  //   },
  // ],
  constraintsFiltering: "strict",
  constraints: {
    jenkins: "2.462.2",
  },
  packageRules: [
    {
      matchManagers: ["terraform"],
      rangeStrategy: "replace",
    },
    {
      description: "jenkins-plugins: disable pr and automerge",
      matchDatasources: ["jenkins-plugins"],
      separateMinorPatch: false,
      automerge: false,
      dependencyDashboardApproval: true,
    },
  ],
  customManagers: [
    {
      customType: "regex",
      fileMatch: ["\\.ya?ml(\\.j2)?$", "\\.tf$"],
      matchStrings: [
        '(?m:^[ \\t]*?# ?renovate: depName=(?<depName>\\S+) datasource=(?<datasource>\\S+)( versioning=(?<versioning>\\S+))?( extractVersion=(?<extractVersion>\\S+))?\\n[ \\t \\- ]*?\\S+:[ ]*"?(?<currentValue>[^" ]+?)"?$)',
      ],
      datasourceTemplate: "{{{datasource}}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      extractVersionTemplate: "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
    },
  ],
}
